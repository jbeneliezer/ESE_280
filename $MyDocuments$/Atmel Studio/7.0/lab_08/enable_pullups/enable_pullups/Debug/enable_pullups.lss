
AVRASM ver. 2.2.7  E:\ESE_280\$MyDocuments$\Atmel Studio\7.0\lab_8\enable_pullups\enable_pullups\main.asm Tue Oct 27 18:26:42 2020

E:\ESE_280\$MyDocuments$\Atmel Studio\7.0\lab_8\enable_pullups\enable_pullups\main.asm(20): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.3.300\avrasm\inc\m4809def.inc'
E:\ESE_280\$MyDocuments$\Atmel Studio\7.0\lab_8\enable_pullups\enable_pullups\main.asm(20): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.3.300\avrasm\inc\m4809def.inc'
                                 
                                 
                                 ;*
                                 ;* Title: enable_pullups.asm
                                 ;* Author: Judah Ben-Eliezer
                                 ;* Version: 1.0
                                 ;* Last updated: 10/27/2020
                                 ;* Target: 
                                 ;*
                                 ;* DESCRIPTION
                                 ;* 
                                 ;* 
                                 ;*
                                 ;*
                                 ;* VERSION HISTORY
                                 ;* 1.0 Original version
                                 ;***************************************************************************
                                 
                                 
                                 .list
                                 
                                 
                                 ; Replace with your application code
                                 start:
000000 e000                      	ldi r16, $00
000001 b900                          out VPORTA_DIR, r16
000002 e0b4                      	ldi XH, HIGH(PORTA_PIN0CTRL)
000003 e1a0                      	ldi XL, LOW(PORTA_PIN0CTRL)
000004 e018                      	ldi r17, 8
                                 
                                 main_loop:
000005 910c                      	ld r16, X
000006 6008                      	ori r16, $08
000007 930d                      	st X+, r16
000008 951a                      	dec r17
000009 f7d9                      	brne main_loop
                                 	
                                  
                                 
                                 
                                 ;***************************************************************************
                                 ;* 
                                 ;* "pullups" - title
                                 ;*
                                 ;* Description: enables pullups for Port A
                                 ;*
                                 ;* Author: Judah Ben-Eliezer
                                 ;* Version: 1.0
                                 ;* Last updated: 10/27/2020
                                 ;* Target:
                                 ;* Number of words:
                                 ;* Number of cycles:
                                 ;* Low registers modified:
                                 ;* High registers modified:
                                 ;*
                                 ;* Parameters:
                                 ;* Returns:
                                 ;*
                                 ;* Notes: 
                                 ;*


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

"ATmega4809" register use summary:
x  :   2 y  :   0 z  :   0 r0 :   0 r1 :   0 r2 :   0 r3 :   0 r4 :   0 
r5 :   0 r6 :   0 r7 :   0 r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 
r13:   0 r14:   0 r15:   0 r16:   5 r17:   2 r18:   0 r19:   0 r20:   0 
r21:   0 r22:   0 r23:   0 r24:   0 r25:   0 r26:   1 r27:   1 r28:   0 
r29:   0 r30:   0 r31:   0 
Registers used: 5 out of 35 (14.3%)

"ATmega4809" instruction use summary:
.lds  :   0 .sts  :   0 adc   :   0 add   :   0 adiw  :   0 and   :   0 
andi  :   0 asr   :   0 bclr  :   0 bld   :   0 brbc  :   0 brbs  :   0 
brcc  :   0 brcs  :   0 break :   0 breq  :   0 brge  :   0 brhc  :   0 
brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 brlt  :   0 brmi  :   0 
brne  :   1 brpl  :   0 brsh  :   0 brtc  :   0 brts  :   0 brvc  :   0 
brvs  :   0 bset  :   0 bst   :   0 call  :   0 cbi   :   0 cbr   :   0 
clc   :   0 clh   :   0 cli   :   0 cln   :   0 clr   :   0 cls   :   0 
clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :   0 cpc   :   0 
cpi   :   0 cpse  :   0 dec   :   1 des   :   0 eor   :   0 fmul  :   0 
fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   0 inc   :   0 
jmp   :   0 ld    :   1 ldd   :   0 ldi   :   4 lds   :   0 lpm   :   0 
lsl   :   0 lsr   :   0 mov   :   0 movw  :   0 mul   :   0 muls  :   0 
mulsu :   0 neg   :   0 nop   :   0 or    :   0 ori   :   1 out   :   1 
pop   :   0 push  :   0 rcall :   0 ret   :   0 reti  :   0 rjmp  :   0 
rol   :   0 ror   :   0 sbc   :   0 sbci  :   0 sbi   :   0 sbic  :   0 
sbis  :   0 sbiw  :   0 sbr   :   0 sbrc  :   0 sbrs  :   0 sec   :   0 
seh   :   0 sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :   1 std   :   0 
sts   :   0 sub   :   0 subi  :   0 swap  :   0 tst   :   0 wdr   :   0 

Instructions used: 7 out of 114 (6.1%)

"ATmega4809" memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000014     20      0     20   49152   0.0%
[.dseg] 0x002800 0x002800      0      0      0    6144   0.0%
[.eseg] 0x000000 0x000000      0      0      0     256   0.0%

Assembly complete, 0 errors, 0 warnings
