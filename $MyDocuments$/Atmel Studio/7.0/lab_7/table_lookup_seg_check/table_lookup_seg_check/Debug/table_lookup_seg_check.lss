
AVRASM ver. 2.2.7  E:\ESE_280\$MyDocuments$\Atmel Studio\7.0\lab_7\table_lookup_seg_check\table_lookup_seg_check\main.asm Tue Oct 20 20:27:01 2020

E:\ESE_280\$MyDocuments$\Atmel Studio\7.0\lab_7\table_lookup_seg_check\table_lookup_seg_check\main.asm(9): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.3.300\avrasm\inc\m4809def.inc'
E:\ESE_280\$MyDocuments$\Atmel Studio\7.0\lab_7\table_lookup_seg_check\table_lookup_seg_check\main.asm(9): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.3.300\avrasm\inc\m4809def.inc'
                                 
                                 
                                 ; table_lookup_seg_check.asm
                                 ;
                                 ; Created: 10/20/2020 7:48:20 PM
                                 ; Author : hp
                                 ;
                                 
                                 .list
                                 
                                 start:
000000 e000                      	ldi r16, $00
000001 ef1f                      	ldi r17, $FF
000002 b900                      	out VPORTA_DIR, r16
000003 b91c                      	out VPORTD_DIR, r17
000004 9a47                      	sbi VPORTC_DIR, 7
000005 9a4f                      	sbi VPORTC_OUT, 7
                                 
                                 main_loop:
000006 b102                      	in r16, VPORTA_IN
000007 b91d                      	out VPORTD_OUT, r17
000008 e010                      	ldi r17, $00
000009 e028                      	ldi r18, $08
                                 
                                 reverse_bits:
00000a 9507                      	ror r16
00000b 1f11                      	rol r17
00000c 952a                      	dec r18
00000d f7e1                      	brne reverse_bits
                                 
                                 hex_to_7seg:
00000e 701f                      	andi r17, 0x0F				;clear ms nibble
00000f e0f0                          ldi ZH, HIGH(hextable * 2)  ;set Z to point to start of table
000010 e2ec                          ldi ZL, LOW(hextable * 2)
000011 e000                          ldi r16, $00                ;add offset to Z pointer
000012 0fe1                          add ZL, r17
000013 1ff0                          adc ZH, r16
000014 9114                          lpm r17, Z                  ;load byte from table pointed to by Z
000015 cff0                      	rjmp main_loop
                                 
                                     ;Table of segment values to display digits 0 - F
                                     ;!!! seven values must be added - verify all values
000016 4f01
000017 0612
000018 244c
000019 0f20
E:\ESE_280\$MyDocuments$\Atmel Studio\7.0\lab_7\table_lookup_seg_check\table_lookup_seg_check\main.asm(44): warning: .cseg .db misalignment - padding zero byte


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

"ATmega4809" register use summary:
x  :   0 y  :   0 z  :   1 r0 :   0 r1 :   0 r2 :   0 r3 :   0 r4 :   0 
r5 :   0 r6 :   0 r7 :   0 r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 
r13:   0 r14:   0 r15:   0 r16:   6 r17:   8 r18:   2 r19:   0 r20:   0 
r21:   0 r22:   0 r23:   0 r24:   0 r25:   0 r26:   0 r27:   0 r28:   0 
r29:   0 r30:   2 r31:   2 
Registers used: 6 out of 35 (17.1%)

"ATmega4809" instruction use summary:
.lds  :   0 .sts  :   0 adc   :   1 add   :   1 adiw  :   0 and   :   0 
andi  :   1 asr   :   0 bclr  :   0 bld   :   0 brbc  :   0 brbs  :   0 
brcc  :   0 brcs  :   0 break :   0 breq  :   0 brge  :   0 brhc  :   0 
brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 brlt  :   0 brmi  :   0 
brne  :   1 brpl  :   0 brsh  :   0 brtc  :   0 brts  :   0 brvc  :   0 
brvs  :   0 bset  :   0 bst   :   0 call  :   0 cbi   :   0 cbr   :   0 
clc   :   0 clh   :   0 cli   :   0 cln   :   0 clr   :   0 cls   :   0 
clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :   0 cpc   :   0 
cpi   :   0 cpse  :   0 dec   :   1 des   :   0 eor   :   0 fmul  :   0 
fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   1 inc   :   0 
jmp   :   0 ld    :   0 ldd   :   0 ldi   :   7 lds   :   0 lpm   :   2 
lsl   :   0 lsr   :   0 mov   :   0 movw  :   0 mul   :   0 muls  :   0 
mulsu :   0 neg   :   0 nop   :   0 or    :   0 ori   :   0 out   :   3 
pop   :   0 push  :   0 rcall :   0 ret   :   0 reti  :   0 rjmp  :   1 
rol   :   1 ror   :   1 sbc   :   0 sbci  :   0 sbi   :   2 sbic  :   0 
sbis  :   0 sbiw  :   0 sbr   :   0 sbrc  :   0 sbrs  :   0 sec   :   0 
seh   :   0 sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :   0 std   :   0 
sts   :   0 sub   :   0 subi  :   0 swap  :   0 tst   :   0 wdr   :   0 

Instructions used: 13 out of 114 (11.4%)

"ATmega4809" memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000036     44     10     54   49152   0.1%
[.dseg] 0x002800 0x002800      0      0      0    6144   0.0%
[.eseg] 0x000000 0x000000      0      0      0     256   0.0%

Assembly complete, 0 errors, 1 warnings
