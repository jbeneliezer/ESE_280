
AVRASM ver. 2.2.7  E:\ESE_280\$MyDocuments$\Atmel Studio\7.0\lab_5\conditional_input_sftwe\conditional_input_sftwe\main.asm Tue Oct 06 19:18:11 2020

E:\ESE_280\$MyDocuments$\Atmel Studio\7.0\lab_5\conditional_input_sftwe\conditional_input_sftwe\main.asm(9): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.3.300\avrasm\inc\m4809def.inc'
E:\ESE_280\$MyDocuments$\Atmel Studio\7.0\lab_5\conditional_input_sftwe\conditional_input_sftwe\main.asm(9): Including file 'C:/Program Files (x86)\Atmel\Studio\7.0\Packs\atmel\ATmega_DFP\1.3.300\avrasm\inc\m4809def.inc'
                                 
                                 
                                 ; conditional_input_sftwe.asm
                                 ;
                                 ; Created: 10/6/2020 6:38:10 PM
                                 ; Author : hp
                                 ;
                                 
                                 .list
                                 
                                 
                                 ; Replace with your application code
                                 start:
000000 e000                      	ldi r16, $00
000001 ef1f                      	ldi r17, $FF
000002 ef2e                      	ldi r18, $FE
000003 b900                          out VPORTA_DIR, r16
000004 b91c                      	out VPORTD_DIR, r17
000005 b90d                      	out VPORTD_OUT, r16
000006 bb20                      	out VPORTE_DIR, r18
000007 e011                      	ldi r17, $01	; delay = 0.1 * r17
                                 
                                 check_flag:
000008 e042                      	ldi r20, $02
000009 bb41                      	out VPORTE_OUT, r20
00000a b322                      	in r18, VPORTE_IN
00000b 7021                      	andi r18, $01
00000c 3021                      	cpi r18, $01
00000d f009                      	breq outer_loop
00000e cff9                      	rjmp check_flag
                                 
                                 outer_loop:
00000f e63e                      	ldi r19, 110
                                 
                                 inner_loop:
000010 953a                      	dec r19
000011 f7f1                      	brne inner_loop
000012 951a                      	dec r17
000013 f7d9                      	brne outer_loop
                                 	
                                 sw_led_io:
000014 b102                      	in r16, VPORTA_IN
000015 9500                      	com r16
000016 b90d                      	out VPORTD_OUT, r16
000017 e040                      	ldi r20, $00
000018 bb41                      	out VPORTE_OUT, r20
000019 cfee                      	rjmp check_flag


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

"ATmega4809" register use summary:
x  :   0 y  :   0 z  :   0 r0 :   0 r1 :   0 r2 :   0 r3 :   0 r4 :   0 
r5 :   0 r6 :   0 r7 :   0 r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 
r13:   0 r14:   0 r15:   0 r16:   6 r17:   4 r18:   5 r19:   2 r20:   4 
r21:   0 r22:   0 r23:   0 r24:   0 r25:   0 r26:   0 r27:   0 r28:   0 
r29:   0 r30:   0 r31:   0 
Registers used: 5 out of 35 (14.3%)

"ATmega4809" instruction use summary:
.lds  :   0 .sts  :   0 adc   :   0 add   :   0 adiw  :   0 and   :   0 
andi  :   1 asr   :   0 bclr  :   0 bld   :   0 brbc  :   0 brbs  :   0 
brcc  :   0 brcs  :   0 break :   0 breq  :   1 brge  :   0 brhc  :   0 
brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 brlt  :   0 brmi  :   0 
brne  :   2 brpl  :   0 brsh  :   0 brtc  :   0 brts  :   0 brvc  :   0 
brvs  :   0 bset  :   0 bst   :   0 call  :   0 cbi   :   0 cbr   :   0 
clc   :   0 clh   :   0 cli   :   0 cln   :   0 clr   :   0 cls   :   0 
clt   :   0 clv   :   0 clz   :   0 com   :   1 cp    :   0 cpc   :   0 
cpi   :   1 cpse  :   0 dec   :   2 des   :   0 eor   :   0 fmul  :   0 
fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   2 inc   :   0 
jmp   :   0 ld    :   0 ldd   :   0 ldi   :   7 lds   :   0 lpm   :   0 
lsl   :   0 lsr   :   0 mov   :   0 movw  :   0 mul   :   0 muls  :   0 
mulsu :   0 neg   :   0 nop   :   0 or    :   0 ori   :   0 out   :   7 
pop   :   0 push  :   0 rcall :   0 ret   :   0 reti  :   0 rjmp  :   2 
rol   :   0 ror   :   0 sbc   :   0 sbci  :   0 sbi   :   0 sbic  :   0 
sbis  :   0 sbiw  :   0 sbr   :   0 sbrc  :   0 sbrs  :   0 sec   :   0 
seh   :   0 sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :   0 std   :   0 
sts   :   0 sub   :   0 subi  :   0 swap  :   0 tst   :   0 wdr   :   0 

Instructions used: 10 out of 114 (8.8%)

"ATmega4809" memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000034     52      0     52   49152   0.1%
[.dseg] 0x002800 0x002800      0      0      0    6144   0.0%
[.eseg] 0x000000 0x000000      0      0      0     256   0.0%

Assembly complete, 0 errors, 0 warnings
